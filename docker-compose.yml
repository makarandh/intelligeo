version: "3"

services:
  mongo-server:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASS}
      GEO_PASS: ${GEO_PASS}
    volumes:
      - ./db/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      - /site_data/files_and_data/database_files:/data/db
#    network_mode: host
    networks:
      - default
    stdin_open: true
    tty: true
    ports:
      - 127.0.0.1:27017:27017

  flask-app:
    restart: always
    build:
      dockerfile: Dockerfile
      context: ./flask_api_geo
    volumes:
      - /site_data/logs/flask-logs:/flaskapp/log
      - /site_data/files_and_data/static:/flaskapp/static
#    ports:
#      - 127.0.0.1:3000:3000

    network_mode: host
#    networks:
#      - default
    stdin_open: true
    tty: true
    depends_on:
      - mongo-server

  nginx-server:
    restart: always
    build:
      context: ./nginx_geo
      dockerfile: Dockerfile
    volumes: # Logs and images are stored in /site_data in host
      - /site_data/logs/nginx-logs:/var/log/nginx
      - ./nginx_geo/sites:/docker_nginx/sites
      - /site_data/files_and_data/static:/docker_nginx/static
      - ./nginx_geo/ssl/dhparam:/etc/nginx/ssl/dhparam
      - /etc/letsencrypt:/etc/letsencrypt
    network_mode: host
#    ports:
#      - 80:80
#      - 443:443
#    networks:
#      - default
    stdin_open: true
    tty: true
    depends_on:
      - mongo-server
      - flask-app

networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 172.18.0.0/24
