version: "3"

services:
  mongo-server:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASS}
      GEO_PASS: ${GEO_PASS}
    volumes:
      - ./db/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      - /site_data/files_and_data/database_files:/data/db
    networks:
      - default
    stdin_open: true
    tty: true

  flask-app:
    restart: always
    build:
      dockerfile: Dockerfile
      context: ./geo_flask_api
    volumes:
      - /site_data/logs/flask-logs:/home/flaskuser/flaskapp/log
      - /site_data/files_and_data/static:/home/flaskuser/flaskapp/static
    networks:
      - default
    stdin_open: true
    tty: true

    depends_on:
      - mongo-server

  nginx-server:
    restart: always
    build:
      context: ./geo_nginx
      dockerfile: Dockerfile
    volumes:
      - /site_data/logs/nginx-logs:/var/log/nginx
      - ./geo_nginx/build:/docker_nginx/html
      - ./geo_nginx/ssl/dhparam:/etc/nginx/ssl/dhparam
      - /etc/letsencrypt:/etc/letsencrypt
    ports:
      - 80:80
      - 443:443
      - 0.0.0.0:5000:5000
    networks:
      - default
    stdin_open: true
    tty: true
    depends_on:
      - mongo-server
      - flask-app

networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 172.18.0.0/24
