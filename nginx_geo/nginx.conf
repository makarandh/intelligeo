worker_processes auto;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log warn;

    include mime.types;
    server_tokens off;
    sendfile on;
    tcp_nopush on;

    client_body_buffer_size 10K;
    client_max_body_size 128M;
    client_header_buffer_size 1k;
    proxy_max_temp_file_size 0;
    client_body_timeout 60;
    client_header_timeout 60;
    keepalive_timeout 65;
    send_timeout 60;
    etag off;
    if_modified_since exact;

#     server {
#         listen 80 default_server;
#         listen [::]:80 default_server;
#         server_name _;
#         error_page 400 403 404 500 =404 /e404.html;
#         location = /e404.html {
#             root   /site_data/files_and_data/static;
#             allow all;
#         }
#         location /static/images {
#             root /site_data/files_and_data/;
#         }
#         location / {
#             include      /etc/nginx/proxy_params;
#             proxy_pass      http://localhost:3000;
#             proxy_redirect   off;
#         }
#     }

#    server {
#        root /docker_nginx/sites/geo.intellideep.digital;
#        index index.html;
#        try_files $uri $uri/ =404;
#        error_page 400 403 404 500 =404 /index.html;
#
# #         root /docker_nginx/sites/admin.geo.intellideep.digital;
# #         try_files $uri /index.html;
#
#        location /game {
#            try_files $uri /game/index.html;
#        }
#
#        listen 443 ssl http2;
#        listen [::]:443 ssl http2;
#        ssl_certificate /etc/letsencrypt/live/localhost/fullchain.pem; # managed by Certbot
#        ssl_certificate_key /etc/letsencrypt/live/localhost/privkey.pem; # managed by Certbot
#        include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
#        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
#        add_header Strict-Transport-Security "max-age=63072000" always;
#    }
#
#    server {
#        listen 5000 ssl http2;
#        listen [::]:5000 ssl http2;
#        ssl_certificate /etc/letsencrypt/live/localhost/fullchain.pem; # managed by Certbot
#        ssl_certificate_key /etc/letsencrypt/live/localhost/privkey.pem; # managed by Certbot
#        include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
#        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
#        add_header Strict-Transport-Security "max-age=63072000" always;
#
#         location /static/images {
#             try_files $uri $uri/ =404;
#             root /docker_nginx;
#         }
#
#        location / {
#            add_header 'Access-Control-Allow-Origin' '*' always;
#            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, OPTIONS, DELETE' always;
#            add_header 'Access-Control-Allow-Headers' 'Authorization,DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
#            include      /etc/nginx/proxy_params;
#            proxy_pass      http://flask-app:3000;
#            proxy_redirect   off;
#        }
#    }

    server {
        listen 80 ;
        listen [::]:80 ;
        server_name intellideep.digital;
        return 301 https://$host$request_uri;
    }

    server {
        listen 80 ;
        listen [::]:80 ;
        server_name www.intellideep.digital;
        return 301 https://$host$request_uri;
    }

    server {
        listen 80 ;
        listen [::]:80 ;
        server_name geo.intellideep.digital;
        return 301 https://$host$request_uri;
    }

    server {
        listen 80 ;
        listen [::]:80 ;
        server_name admin.geo.intellideep.digital;
        return 301 https://$host$request_uri;
    }

    server {
        listen 80 ;
        listen [::]:80 ;
        server_name api.geo.intellideep.digital;
        return 301 https://$host$request_uri;
    }

    server {
        listen 80 ;
        listen [::]:80 ;
        server_name kal.geo.intellideep.digital;
        return 301 https://$host$request_uri;
    }

    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;
        location / {
            return 301 https://$host$request_uri;
        }
    }

    #  intellideep.digital redirects to www.intellideep.digital
    server {
        if ($host = intellideep.digital) {
            return 301 https://www.intellideep.digital;
        }
        server_name intellideep.digital;

        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        ssl_certificate /etc/letsencrypt/live/intellideep.digital/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/intellideep.digital/privkey.pem; # managed by Certbot
        include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
        add_header Strict-Transport-Security "max-age=63072000" always;
        add_header Content-Security-Policy "default-src 'self' *.intellideep.digital;img-src 'self' blob: data: *.intellideep.digital;font-src fonts.gstatic.com use.fontawesome.com *.intellideep.digital;style-src 'self' fonts.googleapis.com use.fontawesome.com *.intellideep.digital;script-src 'self' use.fontawesome.com *.intellideep.digital" always;
        ssl_stapling on;
        ssl_stapling_verify on;
    }

    # IntelliDeep homepage
    server {
        root /docker_nginx/sites/www.intellideep.digital;
        index index.html;
        server_name www.intellideep.digital; # managed by Certbot

        location / {
            try_files $uri $uri/ =404;
        }

        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        ssl_certificate /etc/letsencrypt/live/www.intellideep.digital/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/www.intellideep.digital/privkey.pem; # managed by Certbot
        include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
        add_header Strict-Transport-Security "max-age=63072000" always;
        add_header Content-Security-Policy "default-src 'self' *.intellideep.digital;img-src 'self' blob: data: *.intellideep.digital;font-src fonts.gstatic.com use.fontawesome.com *.intellideep.digital;style-src 'self' fonts.googleapis.com use.fontawesome.com *.intellideep.digital;script-src 'self' use.fontawesome.com *.intellideep.digital" always;
        ssl_stapling on;
        ssl_stapling_verify on;
    }

    #  IntelliGeo game
    server {
        root /docker_nginx/sites/geo.intellideep.digital;
        index index.html;
        server_name geo.intellideep.digital;
        try_files $uri $uri/ =404;
        error_page 400 403 404 500 =404 /index.html;

       location /game {
           try_files $uri /game/index.html;
       }

        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        ssl_certificate /etc/letsencrypt/live/geo.intellideep.digital/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/geo.intellideep.digital/privkey.pem; # managed by Certbot
        include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
        add_header Strict-Transport-Security "max-age=63072000" always;
        add_header Content-Security-Policy "default-src 'self' *.intellideep.digital;img-src 'self' blob: data: *.intellideep.digital;font-src fonts.gstatic.com use.fontawesome.com *.intellideep.digital;style-src 'self' fonts.googleapis.com use.fontawesome.com *.intellideep.digital;script-src 'self' use.fontawesome.com *.intellideep.digital" always;
        ssl_stapling on;
        ssl_stapling_verify on;
    }

    #  Admin Dashboard IntelliGeo
    server {
        root /docker_nginx/sites/admin.geo.intellideep.digital;
        index index.html;
        server_name admin.geo.intellideep.digital;

        location / {
            try_files $uri /index.html;
        }

        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        ssl_certificate /etc/letsencrypt/live/admin.geo.intellideep.digital/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/admin.geo.intellideep.digital/privkey.pem; # managed by Certbot
        include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
        add_header Strict-Transport-Security "max-age=63072000" always;
        add_header Content-Security-Policy "default-src 'self' *.intellideep.digital;img-src 'self' blob: data: *.intellideep.digital;font-src fonts.gstatic.com use.fontawesome.com *.intellideep.digital;style-src 'self' fonts.googleapis.com use.fontawesome.com *.intellideep.digital;script-src 'self' use.fontawesome.com *.intellideep.digital" always;
        ssl_stapling on;
        ssl_stapling_verify on;
    }

    server {
        listen [::]:443 ssl; # managed by Certbot
        listen 443 ssl; # managed by Certbot
        server_name kal.intellideep.digital;
        root /var/www/html/portfolio_wp;

        ssl_certificate /etc/letsencrypt/live/kal.intellideep.digital/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/kal.intellideep.digital/privkey.pem; # managed by Certbot
        include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

        index index.html index.php;
        try_files $uri $uri/ /index.html /index.phpi$is_args$args;
        location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/run/php/php7.4-fpm.sock;
      }

    }

    map $http_origin $allow_origin {
        https://geo.intellideep.digital "https://geo.intellideep.digital";
        https://admin.geo.intellideep.digital "https://admin.geo.intellideep.digital";
    }

    # API Server IntelliGeo
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name api.geo.intellideep.digital;

        ssl_certificate /etc/letsencrypt/live/api.geo.intellideep.digital/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/api.geo.intellideep.digital/privkey.pem;
        include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

        ssl_stapling on;
        ssl_stapling_verify on;

        error_page 400 403 404 500 =404 /e404.html;
        location = /e404.html {
            root   /docker_nginx/static;
            allow all;
        }

        add_header Strict-Transport-Security "max-age=63072000" always;
        add_header Content-Security-Policy "default-src 'self' *.intellideep.digital;font-src fonts.gstatic.com;style-src 'self' fonts.googleapis.com" always;
        add_header 'Access-Control-Allow-Origin' $allow_origin  always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, OPTIONS, DELETE' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization,DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;

        location /static/images {
            root /docker_nginx;
            valid_referers server_names geo.intellideep.digital admin.geo.intellideep.digital www.intellideep.digital;
            if ($invalid_referer) {
                return 404;
            }
        }

        location / {
            include      /etc/nginx/proxy_params;
            proxy_pass      http://flask-app:3000;
            proxy_redirect   off;
        }
    }
}
